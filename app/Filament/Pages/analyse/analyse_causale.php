<?php

namespace App\Filament\Pages\analyse;

use App\Models\AnalyseEquite;
use App\Models\CausalAnalysis;
use Filament\Actions\Action;
use Filament\Facades\Filament;
use Filament\Forms\Components\FileUpload;
use Filament\Forms\Components\RichEditor;
use Filament\Forms\Components\Select;
use Filament\Notifications\Notification;
use Filament\Pages\Page;
use Filament\Tables\Actions\EditAction;
use Filament\Tables\Columns\TextColumn;
use Filament\Tables\Concerns\InteractsWithTable;
use Filament\Tables\Contracts\HasTable;
use Spatie\SimpleExcel\SimpleExcelReader;

class analyse_causale extends Page implements HasTable
{

    use InteractsWithTable;
    protected static ?string $title = "Analyses causale";
    protected static ?string $navigationGroup = "Analyses";
    protected static ?string $navigationLabel = "Analyses causale";
    protected static string $view = 'filament.pages.analyse.analyse_causale';

    public function getTableQuery()
    {
        return CausalAnalysis::query();
    }

    public static function getNavigationBadge(): ?string
    {
        return CausalAnalysis::query()->count(); // TODO: Change the autogenerated stub
    }

    protected function getHeaderActions(): array
    {
        return [
            Action::make('Importer')
                ->label('Importer')
                ->action(function($data){
                    $rows = SimpleExcelReader::create(storage_path('app/public/'.$data['file']))->getRows();
                    foreach ($rows->toArray() as $row) {
                        CausalAnalysis::create([
                           'central_issue_id'=>null,
                           'causes_immediate'=>$row['CAUSES IMMEDIATES'],
                           'causes_sjacent'=>$row['CAUSES SOUS-JASCENTES'],
                           'causes_struct'=>$row['CAUSES STRUCTURELLES'],
                           'consequence'=>$row['CONSEQUENCES'],
                        ]);
                    }

                    Notification::make()
                        ->title("Fichier importé")
                        ->success()
                        ->send();
                })
                ->form([
                    FileUpload::make('file')
                ]),
            Action::make('Ajouter')
                ->label('Ajouter')
                ->action(function($data){

                    (new CausalAnalysis())->fill($data)->save();
                    Notification::make()->title("Analyse enrégistré")->send();
                })
                ->form([
                    Select::make('central_issue_id')->label('Problème Central')->options([]),
                    RichEditor::make('causes_immediate'),
                    RichEditor::make('causes_sjacent')->label("Cause Sous-jacente"),
                    RichEditor::make('causes_struct')->label("Cause Sous-jacente"),
                    RichEditor::make('consequence')->label("Cause Sous-jacente"),
                ])
        ];
    }

    protected function getTableColumns(): array
    {
        return [
          TextColumn::make('id'),
          TextColumn::make('created_at')->label("Date"),
        ];
    }

    public function getTableActions(): array
    {
        return [
            \Filament\Tables\Actions\Action::make('Soumettre')
                ->button()
                ->action(function($record){
                    $record->save();
                }),
            \Filament\Tables\Actions\Action::make('Télécharger')
                ->icon('heroicon-o-folder-arrow-down')
                ->iconButton()
                ->action(function($record){
                    $record->save();
                }),

            EditAction::make('Modifier')
                ->iconButton()
                ->form([
                    Select::make('categorie')->options([
                        'VULNERABLES','DEFAVORISES','MARGINALISES'
                    ]),
                    RichEditor::make('description'),
                    RichEditor::make('cause')->label("Causes de leur situation")
                ]),

            \Filament\Tables\Actions\DeleteAction::make('Supprimer')->iconButton(),

        ];
    }
}
